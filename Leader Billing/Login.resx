<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QCuRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAB6AAAALAAAAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAAdgAxAC4AMAAgACgA
        dQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA4ADAAKQAsACAAZABlAGYAYQB1AGwAdAAgAHEA
        dQBhAGwAaQB0AHkACgAAAP/bAEMACAYGBwYFCAcHBwkJCAoMFA0MCwsMGRITDxQdGh8eHRocHCAkLicg
        IiwjHBwoNyksMDE0NDQfJzk9ODI8LjM0Mv/bAEMBCQkJDAsMGA0NGDIhHCEyMjIyMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMv/AABEIAFQBBAMBIgACEQEDEQH/xAAfAAAB
        BQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYT
        UWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFla
        Y2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK
        0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJ
        Cgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEK
        FiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeI
        iYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T1
        9vf4+fr/2gAMAwEAAhEDEQA/APf6KKTNAC0jHCk0Zpr/AOrb6UAeO+KPjgdJ1u607TtMS4W2kMbSyyFQ
        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
        oA//2Q==
</value>
  </data>
</root>